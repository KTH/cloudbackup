#!/usr/lib64/az/bin/python
# -*- coding: utf-8 -*-

# Copyright (c) 2018, Kungliga Tekniska HÃ¶gskolan
# (Royal Institute of Technology, Stockholm Sweden)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the university nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import re

import azure.common.credentials
import azure.mgmt.rdbms.postgresql

# Only accept shell-safe names.
safe_re = re.compile("^[a-z0-9_\.-]+$")

# Use the 'az login' credentials.
creds = azure.common.credentials.get_azure_cli_credentials()

# List PostgreSQL servers
psqlmgmt = azure.mgmt.rdbms.postgresql.PostgreSQLManagementClient(*creds)
psql_server_pages = psqlmgmt.servers.list()

for psql_server in psql_server_pages:
    fqdn = psql_server.fully_qualified_domain_name

    if safe_re.match(fqdn) is None:
        raise Exception("Bad FQDN: {}".format(fqdn))

    tags = psql_server.tags

    if tags is not None and "no_backup" in tags:
        if tags["no_backup"] == "true":
            continue

    backupuser = "azurebackup"
    if tags is not None and "db_backup_user" in tags:
        backupuser = tags["db_backup_user"]

    if safe_re.match(backupuser) is None:
        raise Exception("Bad backupuser tag: {}".format(backupuser))

    print("{} {}".format(fqdn, backupuser))

